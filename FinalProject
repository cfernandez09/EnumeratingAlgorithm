
public class FinalProject {

	// Complete an array representing first 100 words of a dictionary
	String[] dictionary = { "a", "al", "blah", "blah blah" };

	// Inputing String into hashtable with seperate chaining or linear probing
	// Have the hashey = lenght of the word / size
	final static int size = 97;

	// PROBLEM 2
	// creating string array and int array
	static Integer[] intArray = new Integer[size];
	static String[] stringArray = new String[size];

	// function to insert into the two arrays using quadratic probing
	public void quadraticProbing(String s, Integer n) {
		int hashKey = n % size;
		int i = 1;

		while (intArray[hashKey] != null && stringArray[hashKey] != null) {
			hashKey = (n % size) + (i * i);
			if (hashKey >= intArray.length && hashKey >= stringArray.length)
				hashKey = hashKey - size;
			i++;
		}

		stringArray[hashKey] = s;
		intArray[hashKey] = n;
	}

	/*
	 * Algorythm to scrabble words
	 */

	public void rearrange(String s) {
		rearrange("", s);

	}

	private static void rearrange(String prefix, String s) {
		if (s.length() == 0)
			System.out.println(prefix);
		else {
			for (int i = 0; i < s.length(); i++)
				rearrange(prefix + s.charAt(i), s.substring(0, i) + s.substring(i + 1, s.length()));
		}
	}
	
	public static void main (String [] args){
		FinalProject a = new FinalProject();
		a.rearrange("blah");
	}
}
